#=============================================================================
#
# File:     bmad MAKEFILE.VMS
#
# Purpose:  Simple Makefile to build a CESR bmad library
#
# Author:   M. Palmer 
#
#=============================================================================

#-----------------------------------------------------------------------------
# The following must be explicitly set when building under VMS
#-----------------------------------------------------------------------------
LIBNAME  := bmad
RELEASE  :=
PACKAGES := PACKAGES

# absrcdir (absolute source directory) and CESRLIB MUST be set 
# The following clase allows 
# If you are building a library locally, you should just hardwire 
# absrcdir and CESRLIB to the desired values and leave RELEASE 
# blank.
#absrcdir :=
absrcdir := U:[CESRULIB.TEMP.TRY3.BMAD]
CESRLIB  :=

ifneq "$(strip $(RELEASE))" ""
  absrcdir := CESR_PORTING:[cesr_libs.$(strip $(RELEASE)).src.$(LIBNAME)]
  CESRLIB  := $(strip $(RELEASE))
endif

#MAKE_SRC := u:[cesrulib.cesr_libs.$(CESRLIB).Gmake]
MAKE_SRC := CESR_PORTING:[cesr_libs.$(CESRLIB).Gmake]


#-----------------------------------------------------------------------------
# Specify default source directories for code to be compiled and put into
# libraries, for module files, for code to be compiled into explicit object
# files, and initialization files to be copied to the config directory tree.
# Also specify lists of LOCAL directories to search for include files and 
# compiled module files (NOTE:  the directories $(CESR_INC) and $(CESR_MOD)
# are automatically included in this list by M.tail).  
#
# Multiple directories should be separated by spaces.
#
#
# WARNING:  EMPTY lists should have NO EXTRA SPACES after the :=
#           It is better to simply delete them.  The ones shown here 
#           are intended to show the full range of options available.
#
# WARNING:  All XXX_SRC_DIRS should be specified by local paths such as
#           [.xxxxx] 
#
# CODE_SRC_DIRS   - Put a list of code sub-directories here
# MOD_SRC_DIRS    - Put a list of F90 module source sub-directories here
# OBJ_SRC_DIRS    - Put a list of sub-directories with code that should be 
#                   compiled into explicit .o files but NOT stored in the 
#                   archive library here (for instance, object files for 
#                   for programs).
# CONFIG_DIRS     - Put a list of sub-directories with initialization files
#                   here.   NOTE:  It is assumed that ALL config files in the
#                   CONFIG_DIRS are of the form *.*  This is to avoid copying
#                   of contained sub-directories (eg, the CVS sub-directory).
# LOCAL_INCS      - Local directories to search for include files
# LOCAL_MODS      - Local directories to search for F90 compiled module files
# localmod        - Local Output  for compiled module files (extra "-") 
# locallib        - Local Output library (extra "-")
# localconfig     - Local Output for config files (extra "-")
# OBJ_OUT_DIR     - Object Output dir. (extra "-")
#       (extra "-") -- means in relative dir.path names place one extra "-"
#       example: place [--.lib] instead of real path [-.lib].
#-----------------------------------------------------------------------------


OLB_SRC_DIRS  := [.modules] [.code] [.custom] [.synrad] [.photon] [.lat_file_parsing]
MOD_SRC_DIRS  := 
OBJ_SRC_DIRS  :=
CFG_SRC_DIRS  :=
LOCAL_INCS    := [.include]


LOCAL_MODS    :=
localmod      :=
locallib      :=
localconfig   :=
localbin      :=
OBJ_OUT_DIR   :=

ifeq "$(strip $(RELEASE))" ""
 LOCAL_MODS    := [-.modules]
 localmod      := [--.modules]
 locallib      := [--.lib]
 localconfig   := [--.config]
 localbin      := [--.bin]
 OBJ_OUT_DIR   := [--.lib]
endif

# These variables must be specified if one need to compile
# the library in local area
# Example:
#LOCAL_MODS    := [--.modules]
#localmod      := [--.modules]
#locallib      := [--.lib]
#localconfig   := [--.config]
#localbin      :=
#OBJ_OUT_DIR   := [--.lib]

#-----------------------------------------------------------------------------
# "EXTRA" variables can be specified at the command line or hardwired here.  
# These variables are automatically appended to the relevant search paths and
# lists in M.tail
#
# EXTRA_OLB_SRC  - extra code (for object library) source directories
# EXTRA_MOD_SRC  - extra module source directories
# EXTRA_OBJ_SRC  - extra code (for objects) source directories
# EXTRA_CONFIG   - extra configuration file directories
# EXTRA_INCS     - extra include file search directories
# EXTRA_MODS     - extra compile module search directories
# EXTRA_FFLAGS   - extra Fortran flags for compilation
# EXTRA_CFLAGS   - extra C flags for compilation 
# EXTRA_LFLAGS   - extra linker flags
#-----------------------------------------------------------------------------

EXTRA_OLB_SRC :=
EXTRA_MOD_SRC :=
EXTRA_OBJ_SRC :=
EXTRA_CONFIG  :=
EXTRA_INCS    :=
EXTRA_MODS    :=
EXTRA_FFLAGS  :=
EXTRA_CFLAGS  :=
EXTRA_LFLAGS  :=
CPPFLAG := /DEFINE=CESR_F90_DOUBLE

#------------------------------------------------
# Include the standard CESR M_vms.tail
#------------------------------------------------
include $(MAKE_SRC)M_vms.tail







