$!################################################################
$!
$! Create a makefile with input information for building 
$! This file allows us to get around the issue that shell, 
$! wildcard, and vpath functionality does not (yet?) work 
$! properly in the VMS version of GNU Make.
$! 
$! Usage:  @[cesrulib.com]vms_sources <mode> <dir> <variable_def>
$!
$!         <source_dest> =   OPN  start a new file
$!                           VAR  append a variable definition
$!                           OLB  add sources being compiled into
$!                                an object library
$!                           OBJ  add sources being compiled into
$!                                individual object files
$!                           MOD  add module sources
$!                           CFG  add configuration files
$!
$! Author:  Mark Palmer  Jan 3, 2002
$!
$!################################################################
$!
$ set noverify
$!
$!-----------------------
$! Check for valid input
$!-----------------------
$!
$ tp1 = 0
$ tp2 = 0
$ if ("''p1'" .eqs. "") then tp1 = 1
$ if ("''p2'" .eqs. "") then tp2 = 1
$ if (tp1.or.tp2)
$ then 
$   write sys$output "Incorrect inputs specified..."
$   exit
$ endif
$!
$!-------------------------------------
$! Move to the specified directory
$!-------------------------------------
$!
$ set def 'p2'
$!
$!--------------------------
$! Specify the output file
$!--------------------------
$!
$ filename = "vms.sources"
$!
$!--------------------------
$! Start a new file upon request
$!--------------------------
$!
$ if (p1 .eqs. "OPN") 
$ then
$   open/write outfile 'filename'
$   write outfile "#"
$   write outfile "# This is vms.sources, an auto-generated file"
$   write outfile "# >>>>> DO NOT EDIT THIS FILE BY HAND!! <<<<<"
$   write outfile "#"
$   write outfile " "
$   exit
$ endif
$!
$!--------------------------------------------------------
$! Append a variable specification to a file upon request
$!--------------------------------------------------------
$!
$ if (p1 .eqs. "VAR") 
$ then
$   open/append outfile 'filename'
$   if ("''p3'" .nes. "")
$   then
$     write outfile p3
$     exit
$   endif
$ endif
$!
$!--------------------------------------------------------
$! Otherwise, generate configuration information for the 
$! specificed build directory.
$!--------------------------------------------------------
$!
$   open/append outfile 'filename'
$!
$!-------------------------------------
$! Write out configuration information
$!-------------------------------------
$!
$ write outfile " "
$ write outfile "F90_LSOURCES :="
$ write outfile "F77_LSOURCES :="
$ write outfile "FOR_LSOURCES :="
$ write outfile "F_LSOURCES   :="
$ write outfile "C_LSOURCES   :="
$ write outfile " "
$ write outfile "F90_SOURCES :="
$ write outfile "F77_SOURCES :="
$ write outfile "FOR_SOURCES :="
$ write outfile "F_SOURCES   :="
$ write outfile "C_SOURCES   :="
$ write outfile " "
$ write outfile "MODULE_SOURCES :="
$ write outfile " "
$ write outfile "CONFIG_SOURCES :="
$ write outfile " "
$!
$!------------------------------------------------------
$! Determine the type of source (object library source, 
$! module source, or object source)
$!------------------------------------------------------
$!
$ f90_mods = 0
$ config   = 0
$ if (p1 .eqs. "OLB") then s_tag = "_LSOURCES"
$ if (p1 .eqs. "OBJ") then s_tag = "_SOURCES"
$ if (p1 .eqs. "MOD")    
$ then 
$   s_tag    = "_SOURCES"
$   f90_mods = 1
$ endif
$ if (p1 .eqs "CFG") 
$ then 
$   s_tag = "_SOURCES"
$   GOTO CONFIG
$ endif
$!---------------------
$! Look for code files
$!---------------------
$!
$! Search for F90 files
$!
$ if (f90_mods .eq. 1) 
$ then
$   tag = "MODULE"+s_tag+" += "
$ else
$   tag = "F90"+s_tag+" += "
$ endif
$ fwild = "*.f90"
$ GOSUB FIND_WILD
$!
$! Search other file types
$!
$ if (f90_mods .eq. 0) 
$ then
$!
$   tag   = "F77"+s_tag+" += "
$   fwild = "*.f77"
$   GOSUB FIND_WILD
$!
$   tag   = "FOR"+s_tag+" += "
$   fwild = "*.for"
$   GOSUB FIND_WILD
$!
$   tag   = "F"+s_tag+" += "
$   fwild = "*.f"
$   GOSUB FIND_WILD
$!
$   tag   = "C"+s_tag+" += "
$   fwild = "*.c"
$   GOSUB FIND_WILD
$!
$ endif
$ GOTO FINISH
$!
$!-----------------------
$! Look for config files
$!-----------------------
$!
$CONFIG:
$!
$ tag   = "CONFIG"+s_tag+" += "
$ fwild = "*.*"
$ GOSUB FIND_WILD
$!
$!--------------------------------
$! Close the output file and exit
$!--------------------------------
$!
$FINISH:
$ close outfile
$ exit
$!
$! MAIN COM FILE ROUTINE ENDS HERE
$!
$!--------------
$! SUBROUTINES:
$!--------------
$!
$! FIND_WILD - subroutine to search for wildcards and add them
$!             to the output file
$!
$FIND_WILD:
$ longfile = f$search(fwild)
$ if longfile .nes. ""
$ then
$   name = f$parse(longfile,,,"NAME")
$   type = f$parse(longfile,,,"TYPE")
$!  Make sure we don't have a directory file
$   if (type .nes. ".DIR")
$   then
$     file = name + type
$     write outfile tag, file
$   endif
$   goto FIND_WILD
$ endif
$ RETURN
$!
$!-----------------
$! End of COM FILE
$!-----------------
$!
$! $Id$
$!
$! $Log$
$! Revision 1.1  2002/01/09 16:29:58  cesrulib
$! First pass at VMS library build infrastructure
$!
$!
