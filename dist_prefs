#-----------------------------------------------------------
# dist_prefs
# ----------
#
# The variables in this file control how a distribution
# build will proceed.  It allows the user to enable and
# disable the use and building of various support libraries
# and to specify locations of 3rd-party libraries installed
# by the user whose functionality is supported by the 
# distribution code.
#
# All values should be enclosed in quotes " ".
#-----------------------------------------------------------

#-----------------------------------------------------------
# Setting the variable DIST_F90_REQUEST here to the name
# of the desired Fortran compiler will allow for its use
# during the build.
#
#    NOTE: gfortran support is limited to version
#          4.6.x and later.
#
# Supported options are:
#   "ifort"
#   "gfortran"
#-----------------------------------------------------------
export DIST_F90_REQUEST="gfortran"


#-----------------------------------------------------------
# Plotting preferences:
#
# The variable ACC_PLOT_PACKAGE set the preferred plotting library.
#
# NOTE: PGPLOT will be built, along side PLplot,
# 	if this variable is set to "plplot".
#
# NOTE: "plplot" is recommended for Windows builds.
#
# Supported options are:
#   "plplot"         # Both PLPLOT and PGPLOT are built
#   "pgplot"         # Only PGPLOT is built
#-----------------------------------------------------------
export ACC_PLOT_PACKAGE="pgplot"


#-----------------------------------------------------------
# Plot display preferences:
#
# The variable ACC_PLOT_DISPLAY_TYPE sets the desired type of
# plotting window to be created by a program. 
#
# This variable may be ignored by any individual program.
# The Tao program does use this variable however.
#
# NOTE: "QT" is recommended for Windows builds.
#
# For a list of supported options, please see the qp_open_page
# documentation in the file sim_utils/plot/quick_plot.f90
#-----------------------------------------------------------
export ACC_PLOT_DISPLAY_TYPE="X"


#-----------------------------------------------------------
# Setting the variable ACC_ENABLE_OPENMP here to "Y"
# will enable OpenMP support during the production build.
#
# NOTE: When compiling GSL, provided in this distribution,
#       on Mac OS 10.7 or higher, OpenMP is not supported. 
#       This is due to a bug in the Xcode 4.x supplied
#       version of gcc (i686-apple-darwin11-llvm-gcc-4.2)
#       or in Apple's default cc complier (clang-425.0.24). 
#
#       Installing and using the MacPorts version(s) of gcc 
#       will avoid this issue (see http://macports.org).
#-----------------------------------------------------------
export ACC_ENABLE_OPENMP="N"


#-----------------------------------------------------------
# Setting the variable ACC_ENABLE_MPI here to "Y"
# will enable OpenMPI support during the production build.
#
# NOTE: To enable this option, OpenMPI must already be 
#       installed on your system and be compatible with the
#       requested Fortran compiler, or it will be built
#       from included source code in this distribution.
#-----------------------------------------------------------
export ACC_ENABLE_MPI="N"


#-----------------------------------------------------------
# Setting the variable ACC_ENABLE_GFORTRAN_OPTIMIZATION here 
# to "Y" will force gfortran -O2 optimization during the 
# production build, "N" will disable. The default depends 
# on how your gcc/gfortran is configured.
# Type "gfortran -Q --help=optimizers -O2" to see what
# optimizations are enabled with the "-O2" flag. 
#-----------------------------------------------------------
export ACC_ENABLE_GFORTRAN_OPTIMIZATION="Y"


#-----------------------------------------------------------
# Trying to make shared object libraries with a distribution 
# generates a gmake error.  This bug is being worked on and 
# for now the making of shared object libraries is disabled. 
# That is, static libraries will be used.
#-----------------------------------------------------------
export ACC_ENABLE_SHARED="N"


#-----------------------------------------------------------
# Setting the variable ACC_SET_GMAKE_JOBS here to an 
# interger value will set gmake to execute that number of 
# recipes or "jobs" at once, effectively running parallel 
# compilations using that number of CPU cores.  The default 
# value is "2" and cannot be set lower than "1"
#-----------------------------------------------------------
export ACC_SET_GMAKE_JOBS="2"
