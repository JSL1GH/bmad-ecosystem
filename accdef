#---- cesrdef ----
#
# Define cesr specific environment variables;
# to be used by csh-like shells: csh,tcsh.
# (Sh, ksh, bash should use cesrdefs)
#
# Shamelessly stolen from the CLEO cleodef script 
# M. Palmer
#
# Usage in .login:
#   source /home/cesrulib/bin/cesrdef
# or switch to other versions of libraries and constants: 
#   setenv CESRLIB devel; source /home/cesrulib/bin/cesrdef
# or define aliases in .cshrc, e.g.:
#   alias cesrdef "source /home/cesrulib/bin/cesrdef" 
#   alias current "setenv CESRLIB current ; source /home/cesrulib/bin/cesrdef"
#   alias devel   "setenv CESRLIB devel ; source /home/cesrulib/bin/cesrdef"
#
#=======================================================================
# Get platform/OS tags
#=======================================================================
set PLATFORM_TAG="`uname -s | cut -d- -f1`_`uname -p`"


#================================================
# For parallel CESR / ACC variable definitions
# This will be deprecated after the next CURRENT
# rotation.
#================================================
if ( $?CESRLIB ) then
  setenv ACCLIB $CESRLIB
endif
if ( $?ACCLIB ) then
  setenv CESRLIB $ACCLIB
endif

if ( $?CESRF90 ) then
  setenv ACCF90 $CESRF90
endif
if ( $?ACCF90 ) then
  setenv CESRF90 $ACCF90
endif


#=======================================================================
# Set CESR fortran compiler:
# CESRF90 = intel (or lahey, hp, absoft, ibm, gnu)
# intel   -- ifort          default on Linux_i686
# lahey   -- lf95           supported on Linux_i686
# hp      -- f77/f90/f95    default on OSF1_alpha
# ibm     -- xlf
# absoft  -- f95            default on Darwin_powerpc
# gnu     -- g77/g95
#=======================================================================
if ( "${PLATFORM_TAG}" == "CYGWIN_NT_i686" ) then 
  if ( $?CESRF90    == 0  ) then setenv CESRF90 intel
  if ( $?ACCF90    == 0  ) then setenv ACCF90 intel
endif

if ( "${PLATFORM_TAG}" == "Linux_i686" ) then
  if ( $?CESRF90    == 0 ) setenv CESRF90 intel
  if ( $?ACCF90    == 0 ) setenv ACCF90 intel
endif

if ( "${PLATFORM_TAG}" == "OSF1_alpha" ) then
  if ( $?CESRF90    == 0 ) setenv CESRF90 hp
  if ( $?ACCF90    == 0 ) setenv ACCF90 hp
endif

if ( "${PLATFORM_TAG}" == "Darwin_powerpc" ) then
  if ( $?CESRF90    == 0 ) setenv CESRF90 absoft
  if ( $?ACCF90    == 0 ) setenv ACCF90 absoft
endif

#=======================================================================
# Only here for temporary fix of stalled login scripts
# for users sourcing this script on x86_64 architecture
# machines.  This provides no other functionality.
#=======================================================================
if ( "${PLATFORM_TAG}" == "Linux_x86_64" ) then
  if ( $?CESRF90    == 0 ) setenv CESRF90 intel
  if ( $?ACCF90    == 0 ) setenv ACCF90 intel
endif


#=======================================================================
# Specify CESR Librarian base areas
# Presently have Unix/Linux and Cygwin versions
#=======================================================================
###set BASE_DIR_DEF=/home/cesrulib
set BASE_DIR_DEF=/nfs/acc


if ( "${PLATFORM_TAG}" == "CYGWIN_NT_i686" ) then 
  set BASE_DIR_DEF=//lns101/cesrulib
endif

if ( $?CESRLIB_BASE == 0 ) set CESRLIB_BASE=${BASE_DIR_DEF}
if ( $?ACCLIB_BASE == 0 ) set ACCLIB_BASE=${BASE_DIR_DEF}

if ( $?CESRLIB_BIN  == 0 ) set CESRLIB_BIN=/home/cesrulib/bin
if ( $?ACCLIB_BIN  == 0 ) set ACCLIB_BIN=/home/cesrulib/bin

#=======================================================================
#	Switchable version
#=======================================================================
if ( $?CESRLIB    == 0 ) setenv CESRLIB     current
if ( $?ACCLIB    == 0 ) setenv ACCLIB     current

if ( $?CERN_LEVEL == 0 ) setenv CERN_LEVEL  pro

#=======================================================================
#	Root names
#=======================================================================
###if ( $?CONST    == 0 ) setenv CONST     ${CESRLIB_BASE}/constants

if ( $?CESR_    == 0 ) setenv CESR_     ${CESRLIB_BASE}/libs
if ( $?ACC_    == 0 ) setenv ACC_     ${ACCLIB_BASE}/libs

if ( $?CERN     == 0 ) setenv CERN      /nfs/cern

#=======================================================================
# Source the CESR environment script
# Now clear all override variables that, by default, use a 
# derivative path from $CESRLIB_BASE.  This does NOT need 
# to be done for the "version" variables
#=======================================================================
if ( $?CESRENV  == 0 ) setenv CESRENV ${CESRLIB_BIN}/accenv
if ( -f "$CESRENV" )  then
	source $CESRENV
else
	echo File $CESRENV not found.
endif

if ( $?ACCENV  == 0 ) setenv ACCENV ${ACCLIB_BIN}/accenv-converted
if ( -f "$ACCENV" )  then
	source $ACCENV
else
	echo File $ACCENV not found.
endif

#==============================================================================
# ----  Add librarian bin area to user's PATH if not already present ----
# ----  Add standard applications area to user's PATH if not there already ---
#==============================================================================
set PATH_LIST=`echo ${PATH} | sed s/:/\ /g`
set found=0
foreach dir (${PATH_LIST})
  if ( "${dir}" == "${CESRLIB_BIN}" ) set found=1
end
if ( $found == 0 ) setenv PATH ${PATH}:${CESRLIB_BIN}

set found=0
foreach dir (${PATH_LIST})
  if ( "${dir}" == "${ACC_EXE}" ) set found=1
end
if ( $found == 0 ) setenv PATH ${PATH}:${ACC_EXE}


#==============================================================================
# Add hook to support OLD style of environment variables
# Clear variable when done
#==============================================================================
if ( $?CESR_ENV_OLD == 1 ) setenv CESR_LIB ${CESR_REL}
unset    CESR_ENV_OLD
unsetenv CESR_ENV_OLD


#=============================================================================
# Log users who are setting up the CESR accelerator code 
# libraries environment.  This is so that notifications of 
# changes can be sent to all active users. 
#=============================================================================
set lock_count=0
set lock_file=/home/cesrulib/user_log/users.lock
set users_done=0
set users_file=/home/cesrulib/user_log/users.list
set max_count=2
while ( ${lock_count} < ${max_count} )
    if ( `filetest -e ${lock_file}` ) then
      #echo "Waiting for ACL setup lock!"
      sleep 1
      set lock_count=`expr ${lock_count} + 1`
    else
      touch ${lock_file}
      echo "`date` - `whoami` `hostname -s` $SHELL:t ${ACC_PLATFORM}_${ACC_F90} ${ACCLIB}" >> ${users_file}
      rm ${lock_file}
      break
    endif
end 
unset lock_count
unset lock_file
unset users_done
unset users_file
unset max_count


#==============================================================================
# Now clear all override environment variables that, by default, use a 
# derivative path from $CESRLIB_BASE.  This does NOT need to be done 
# for the "version" variables.  ALSO, clear all shell variables with 
# names corresponding to the override environment variables to be safe 
# (NOTE:  for variable substitutions in csh-like shells, shell variable 
# assignments take precedence over environment variable assignments)
#==============================================================================
unset    CESRLIB_BASE
unset    CESRLIB_BIN
unset    CESRLIB
unset    CERN_LEVEL
unset    CESR_
unset    CERN
unset    CESRENV
unset    CESRF90

unsetenv CESRLIB
unsetenv CESRLIB_BIN
unsetenv CESR_
unsetenv CESRENV
unsetenv CESRF90


unset    ACCLIB_BASE
unset    ACCLIB_BIN
unset    ACCLIB
unset    CERN_LEVEL
unset    ACC_
unset    CERN
unset    ACCENV
unset    ACCF90

unsetenv ACCLIB
unsetenv ACCLIB_BIN
unsetenv ACC_
unsetenv ACCENV
unsetenv ACCF90



# Relic from repository migration period when two release types existed,
# those with 'cvssrc' paths in them and the newer 'src' paths.

#if ( "${CESR_REL}" == "${CESR_BASE}/current" ) then
#  setenv CESR_SRC ${CESR_REL}/cvssrc
#else

##setenv CESR_SRC ${CESR_REL}/src

#endif

##setenv CESR_INC ${CESR_SRC}/include

#==============================================================
# Centralized set up of Intel and Lahey compilers (Linux only)
#==============================================================
if ( "${PLATFORM_TAG}" == "Linux_i686" ) then
  source /nfs/opt/ifc/bin/ifortvars.csh
  source /nfs/opt/lf9562/csh_setup
endif



###########################################################################
###########################################################################
#
# $Id$
#
# $Log: cesrdef,v $
# Revision 1.11  2006/09/11 20:47:01  cesrulib
# Updates for new library build tree (supporting multiple compiler combinations).
#
# Revision 1.10  2006/08/13 22:30:43  cesrulib
# Update with user logging.
#
# Revision 1.9  2005/06/02 18:32:52  cesrulib
# Intel ifort is default on Linux now...
#
# Revision 1.8  2005/05/15 01:31:36  cesrulib
# New environment variables and some changes have been introduced in order
# make switches between FORTRAN compilers more easy.
# These variables are:
# CESR_F90 for standard release and
# BMAD_F90   for bmad distribution.
# The value of CESR_F90 (or BMAD_F90) depending on platform may be:
#  value   --  compiler    --  platform:
#
#  intel   --  ifort       --  (test in progress on Linux_i686)
#  lahey   --  lf95        --  default on Linux_i686
#  hp      --  f77/f90/f95 --  default on OSF1_alpha
#  ibm     --  xlf
#  absoft  --  f95         --  default on Darwin_powerpc (test in progress)
#  gnu     --  g77/g95
#
# List of files with the change:
# util/
# cesrdefs cesrdef cesrenv do_release f90_mod_list.perl cesrmakedepend
# bmad_defs bmad_def bmadenv do_bmad_dist
# Gmake/
# M.tail M.release M.distribution
#
# Revision 1.7  2004/11/16 16:01:37  palmer
# Update environment variable structure including support for Windows and
# new naming conventions.
#
# Revision 1.6  2003/09/08 18:06:44  cesrulib
# Bug fix - variable name typo.
#
# Revision 1.5  2003/09/08 15:14:47  cesrulib
# Updates for automatic platform dependence and synchronized release/packages
# areas.
#
# Revision 1.4  2003/05/27 15:18:19  palmer
# Add CERN variable definitions.
#
# Revision 1.3  2003/05/21 12:33:17  palmer
# Add PKG_INC environment variable.
# Fix miscellaneous comments.
# Automatically append /home/cesrulib/bin to user's PATH environment variable.
#
# Revision 1.2  2001/10/04 20:35:21  palmer
# Add environment variables for paths to the external packages area.
#
# Revision 1.1  2001/09/29 18:18:14  palmer
# Environment variable utilities for CESR libraries on Unix.
#
#
