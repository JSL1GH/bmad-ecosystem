#---- accdef ----
#
# Define cesr specific environment variables;
# to be used by csh-like shells: csh,tcsh.
#
# Usage in .login:
#   source /home/cesrulib/bin/cesrdef
# or switch to other versions of libraries and constants: 
#   setenv CESRLIB devel; source /home/cesrulib/bin/cesrdef
# or define aliases in .cshrc, e.g.:
#   alias cesrdef "source /home/cesrulib/bin/cesrdef" 
#   alias current "setenv CESRLIB current ; source /home/cesrulib/bin/cesrdef"
#   alias devel   "setenv CESRLIB devel ; source /home/cesrulib/bin/cesrdef"
#
#-------------------------------------------

#-------------------------------------------
# Get platform/OS tags
#-------------------------------------------
set PLATFORM_TAG="`uname -s | cut -d- -f1`_`uname -p`"


#-------------------------------------------
# Backwards compatibility with CESRLIB control variable.
#-------------------------------------------
if ( $?CESRLIB ) then
  setenv ACCLIB $CESRLIB
endif


#-------------------------------------------
# Set ACC fortran compiler:
#
# intel   -- ifort          default on Linux_i686
# gnu     -- gfortran
#-------------------------------------------
if ( "${PLATFORM_TAG}" == "CYGWIN_NT_i686" ) then 
  if ( $?ACCF90    == 0  ) then setenv ACCF90 intel

else if ( "${PLATFORM_TAG}" == "Linux_i686" ) then
  if ( $?ACCF90    == 0 ) setenv ACCF90 intel

else if ( "${PLATFORM_TAG}" == "OSF1_alpha" ) then
  if ( $?ACCF90    == 0 ) setenv ACCF90 hp

else if ( "${PLATFORM_TAG}" == "Darwin_powerpc" ) then
  if ( $?ACCF90    == 0 ) setenv ACCF90 absoft

else 
  setenv PLATFORM_TAG Linux_i686_intel
  if ( $?ACCF90    == 0 ) setenv ACCF90 intel 
endif

setenv PLATFORM_TAG Linux_i686_intel


#-------------------------------------------
# Specify CESR Librarian base areas
# Presently have Unix/Linux and Cygwin versions
#-------------------------------------------
if ( $?ACCLIB_BASE == 0 ) set ACCLIB_BASE=/nfs/acc
if ( $?ACCLIB_BIN  == 0 ) set ACCLIB_BIN=/home/cesrulib/bin


#-------------------------------------------
#	Switchable version
#-------------------------------------------
if ( $?ACCLIB    == 0 ) setenv ACCLIB     current
if ( $?CERN_LEVEL == 0 ) setenv CERN_LEVEL  pro


#-------------------------------------------
#	Root names
#-------------------------------------------
if ( $?ACC_    == 0 ) setenv ACC_     ${ACCLIB_BASE}/libs
if ( $?CERN     == 0 ) setenv CERN      /nfs/cern


#-------------------------------------------
# Source the ACC environment variable set
#-------------------------------------------
setenv PLATFORM_TAG Linux_i686_intel

if ( $?ACCENV  == 0 ) setenv ACCENV ${ACCLIB_BIN}/accenv
if ( -f "$ACCENV" )  then
	source $ACCENV
else
	echo File $ACCENV not found.
endif


#-------------------------------------------
# Add cesrulib bin area to user's PATH.
# Add the selected release's bin dir to 
# user's PATH if not there already.
#-------------------------------------------
set PATH_LIST=`echo ${PATH} | sed s/:/\ /g`
set found=0
foreach dir (${PATH_LIST})
  if ( "${dir}" == "${ACC_EXE}" ) set found=1
end
if ( $found == 0 ) setenv PATH ${PATH}:${ACC_EXE}


#-------------------------------------------
# Temporary?
# Var pointing to CESR control system
# online filesystem.
#-------------------------------------------
setenv CESR_ONLINE /nfs/cesr/online


#-------------------------------------------
# Log users who are setting up the CESR 
# accelerator code libraries environment.
# This is so that notifications of 
# changes can be sent to all active users. 
#-------------------------------------------
set lock_count=0
set lock_file=/home/cesrulib/user_log/users.lock
set users_done=0
set users_file=/home/cesrulib/user_log/users.list
set max_count=2
while ( ${lock_count} < ${max_count} )
    if ( `filetest -e ${lock_file}` ) then
      sleep 1
      set lock_count=`expr ${lock_count} + 1`
    else
      touch ${lock_file}
      echo "`date` - `whoami` `hostname -s` $SHELL:t ${ACC_PLATFORM}_${ACC_F90} ${ACCLIB}" >> ${users_file}
      rm ${lock_file} >& /dev/null
      break
    endif
end 
unset lock_count
unset lock_file
unset users_done
unset users_file
unset max_count


unset    CESRLIB_BASE
unset    CESRLIB_BIN
unset    CESRLIB
unset    CERN_LEVEL
unset    CESR_
unset    CERN
unset    CESRENV
unset    CESRF90

unsetenv CESRLIB
unsetenv CESRLIB_BIN
unsetenv CESR_
unsetenv CESRENV
unsetenv CESRF90


unset    ACCLIB_BASE
unset    ACCLIB_BIN
unset    ACCLIB
unset    CERN_LEVEL
unset    ACC_
unset    CERN
unset    ACCENV
unset    ACCF90

unsetenv ACCLIB
unsetenv ACCLIB_BIN
unsetenv ACC_
unsetenv ACCENV
unsetenv ACCF90


if ( "${ACC_REL}" == "${ACC_BASE}/current" ) then
  setenv BMAD_LAT "${ACC_REL}/config/bmad/lat"
  setenv BMAD_LAYOUT "${ACC_REL}/config/bmad/layout"
endif


#-------------------------------------------
# Check for presence of MPI
#  (In two default paths only)
#-------------------------------------------
[ -e /usr/include/lam/mpif.h ] || [ -e /usr/include/mpif.h ]
if ( $? == 0 ) then
  setenv MPI TRUE
else
  setenv MPI FALSE
endif


#-------------------------------------------
# Set up Ifort and Lahey default compilers
#   (Linux only)
#-------------------------------------------
if ( "${PLATFORM_TAG}" == "Linux_i686" ) then
  source /nfs/opt/ifc/bin/ifortvars.csh
  source /nfs/opt/lf9562/csh_setup
endif


#-------------------------------------------
# Set convenience aliases for release
# selection and searching.
#-------------------------------------------
alias getf '/home/cesrulib/bin/util/getf "\!*"'
alias listf '/home/cesrulib/bin/util/listf "\!*"'
