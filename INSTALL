
                                                           Edited: 2012-Oct-5

*****************************************************************************
INTRODUCTION
-------------

This file describes what needs to be done to build a "BMAD code distribution",
otherwise simply known as "a distribution", on machines that are not part of
the Laboratory for Elementary Particle Physics (LEPP) network. A
distribution contains:
  1) The source code to build a collection of libraries and executables.
  2) Script files to build the libraries and executables.

Details of how to obtain and build the code are provided below.


*****************************************************************************
OBTAINING HELP
---------------

For general questions, installation problems, code building problems contact:
  CESR Unix Librarian (cesrulib@cornell.edu)
  David Sagan (dcs16@cornell.edu)
  Mike Forster (mjf7@cornell.edu)
  Laurel Bartnik (lty2@cornell.edu)

For questions on the BMAD code contact:
  David Sagan (dcs16@cornell.edu)


*****************************************************************************
COMPILER, MAKE AND MISCELLANEOUS SUPPORT PACKAGE ISSUES
--------------------------------------------------------

At present, the BMAD distribution, which includes Fortran90, C, and C++ sources,
is known to build with the following compiler combinations:

LINUX (x86)
  gcc/gfortran Version 4.6 
- or -
  Intel Fortran Compiler (ifort v12)

Mac OSX/Darwin (intel processor)
  gcc/gfortran 4.6

IMPORTANT: The relevant compilers for your platform must
appear in each user's default PATH, otherwise the makefiles and scripts in 
the distribution will not work!

Building the BMAD distribution relies on GNU make makefiles so you need to 
have GNU make installed.  If you have GNU make installed as 'make', you will 
need to create a soft link gmake->make to insure that things build.

In summary, The complete list of (very common) dependencies that your system
will need to have installed before attempting to build the code found within
the distribution:
 
Utilities:
  sh/bash/ash - A Bourne-compatible    - shell
  cmake       - Build system generator - V2.8+
  gmake       - GNU make               - Popular software building tool 


*****************************************************************************
LICENSING ISSUES
-----------------

This distribution includes a modified version of the Numerical Recipes code.
It is the responsibility of the end user to ensure that they have a valid
Numerical Recipes license for any computer on which they build the BMAD 
distribution.  Numerical Recipes licensing information (for individual
computers or sites) can be obtained at www.nr.com.

This distribution includes the FPP/PTC (Polymorphic Tracking Code) package from 
Etienne Forest there are no licensing issues with this software.

This distribution includes the PGPLOT (pretty good plotting) package from Tim Pearson. 
The web page for this package is:
  http://www.astro.caltech.edu/~tjp/pgplot/
From the PGPLOT web page:
  PGPLOT is not public-domain software. However, it is freely available for non-commercial use. 
  The source code and documentation are copyrighted by California Institute of Technology, 
  and may not be redistributed or placed on public Web servers without permission. 
  The software is provided ``as is'' with no warranty. 


*****************************************************************************
ENVIRONMENTAL SETUP

 1. The following stuff should be put in your ~/.cshrc file:
        limit core 0
        limit stack unlimited
        limit datasize unlimited

      or ~/.bashrc file:
        ulimit -c 0
        ulimit -s unlimited
        ulimit -d unlimited

  The first line prevents core dump files from being generated (takes up
  space and no one ever looks at them anyway). The next two lines helps
  prevent programs from bombing due to software limits on internal stack
  and heap sizes.

   2. Run your initialization file:
        source <init_file>
      Where <init_file> is ~/.cshrc or ~/.bashrc .


*****************************************************************************
PLOTTING ISSUES

Some programs (listed below) in the distribution use plotting software for 
displaying results. There are two plotting packages in use: 
  PGPLOT
  PLPLOT
Note: The programs that rely on plotting software will not be linked if the
plotting software is not enabled. Which plotting software is enabled
is set in the "util/dist_prefs" file. See the INSTRUCTIONS FOR INSTALLING section
for more details.

Originally PGPLOT was the used for plotting. Since PGPLOT is not currently being
maintained, the PLPLOT package has been introduced as its replacement but not
all programs have been converted to use PLPLOT. 

Programs that can use PLPLOT or PGPLOT
  tao

Programs that can only use PGPLOT
  bmadz
  closed_orbit 
  analyzer 
  tune_plane_res_plot 

PGPLOT is included in the distribution. However PLPLOT is not included
and so must be downloaded if it is to be used.

PLPLOT is free software primarily licensed under the GNU LGPL license.
The PLPLOT package is not part of the Bmad distribution. Rather it should
be downloaded and installed separately. 
PLPLOT can be obtained at: 
  http://plplot.sourceforge.net/

Note: PLPLOT fortran libraries need to be built along with the other PLPLOT libraries.
The fortran libraries are not part of the default build.
To build the fortran libraries on the Mac using MacPorts use the command:
  sudo port install plplot +gcc44


*****************************************************************************
INSTRUCTIONS FOR OBTAINING THE LATEST DISTRIBUTION
---------------------------------------------------

Distribution tarballs can be downloaded from the Bmad web site:
  http://www.lepp.cornell.edu/~dcs/bmad
Click on the link "Obtaining Bmad Source".

Specific releases are generally of the form:
  bmad_dist_YYYY_MMDD.tgz
where YYYY_MMDD is the year_month-day tag of the release.


*****************************************************************************
INSTRUCTIONS FOR INSTALLING, SETTING UP, AND BUILDING THE DISTRIBUTION
-----------------------------------------------------------------------

0) Install PLPLOT if needed. See the PLOTTING ISSUES sections for more details.

1) Unzip and extract the tar archive into a working directory of your choice
   with the command:

      tar zxf bmad_dist_YYYY_MMDD.tgz

   This will create a directory in that working directory with a name like
   to "bmad_dist_YYYY_MMDD".  This newly-created directory will be referred
   to from now on as "DIR" and can be owned by a system or "master account"
   (Individual users will be able to set up some environment variables, see 
   below, which will allow them to link to libraries and modules in this area).
   The resulting bmad_dist_YYYY_MMDD directory should contain the following
   subdirectories:


   bmad                  -  The BMAD source code
   bmadz                 -  Cesr storage ring design program.
   bsim                  -  Beam simulation programs. 
   cesr_utils            -  A utility library needed by BMAD
   examples              -  Simple programs demonstrating library usage
   forest                -  The Polymorphic Tracking Code package from 
                            Etienne Forest.  Needed by BMAD
   include               -  A master include file area containing include 
                            files needed by multiple libraries
   lattice               -  Machine lattice definition files
   PGPLOT                -  The PGPLOT library from Tim Pearson at CalTech
                            See http://astro.caltech.edu/~tjp/pgplot/ for 
                            details.
   recipes_f-90_LEPP     -  The LEPP version of the Numerical Recipes 
                            libraries.  See the licensing issues above.
   sim_utils             -  Utilities necessary for simulation code
   tao                   -  Tool for Accelerator Optics program
   util                  -  Contains various utility scripts needed to build 
                            CESR libraries
   xsif                  -  XSIF lattice parser.


2) (Optional) Create a soft link to the DIR directory:

   In the directory where the archive was unpacked, you may run this command.

   ln -s bmad_dist_YYYY_MMDD bmad_dist

   This often makes it easier to reference locations in the distribution should
   the need arise, for instance, when setting up other user's login scripts to
   reference a pre-built release location upon session startup.


3) A file is provided that holds supported preferences that you may adjust
   to alter the behavior of the build. 

   This file is named "dist_prefs".
   It can be found in DIR/util.  The contents are documented within and explain
   the options so that you may customize the build simply by editing and saving
   the "dist_prefs" file.  If you choose not to edit the file, the build process
   will attempt to honor the defaults specified here:

     A) Expect that the "PLPLOT" library will be used for the build, and that 
        is installed in /opt/local/lib
     B) Attempt to create application executables along with libraries in all
        libraries that ship with second-tier makefiles set up for that purpose.

   Enabling both PLPLOT and PGPLOT is allowed. 


4) Next, a set of environment variables needs to be incorporated into the user's
   command shell environment to allow proper functioning of the build system.  In 
   order to perform this setup, simply navigate to the top level directory of the
   distribution tree, in this case DIR, and run the following command:

      source util/dist_source_me

   This environment setup step has been verified to work with Bourne-compatible
   shells sh / bash / ash, and also the C-style shells csh / tcsh.

   For dynamically linked library types, you may need to set your 
   LD_LIBRARY_PATH variable or equivalent to reflect the location of the
   necessary .so library files.


5) The final step is to start building the source.  This can be done from within
   the top-level directory DIR, by running:

     util/dist_build_production
     util/dist_build_debug


*****************************************************************************
INSTRUCTIONS FOR SETTING UP A GENERIC USER ACCOUNT TO USE THE DISTRIBUTION
---------------------------------------------------------------------------

1) Users should add one of the following to their local account 
   login or profile files:

   The default behavior is for the setup process to print out informational
   messages.  To suppress this output, you may define the environment
   variable DIST_SETUP_QUIET to have the value "Y".  This is shown as the
   first line in the login script examples below, but it is entirely
   optional.

   For csh/tcsh users - add the text found between the lines, replacing
   DIR for the full path to the directory where the distribution archive
   was unpacked.
      ______________________________________________
       setenv DIST_SETUP_QUIET Y
       setenv DIST_BASE_DIR "DIR"
       source ${DIST_BASE_DIR}/util/dist_source_me
      ______________________________________________


   For sh/ksh/bash users - likewise
      ______________________________________________
       export DIST_SETUP_QUIET=Y
       export DIST_BASE_DIR="DIR"
       source ${DIST_BASE_DIR}/util/dist_source_me
      ______________________________________________

   The default behavior is for the setup process to print out informational
   messages.  To suppress this output, you may define the environment
   variable


2) Each user should make sure that there is a 'gmake' executable available 
   which points to the GNU version of make.  This can typically be 
   accomplished by making a soft link in /home/user/bin called gmake which 
   points to the GNU make executable.  Alternatively, the system 
   administrator can simply put such a soft link in the /usr/local/bin 
   area.


*****************************************************************************
BASIC CODE BUILDS
------------------


1) The user needs to make sure that environment setup has been performed
   (See "INSTRUCTIONS FOR INSTALLING, SETTING UP, AND BUILDING THE 
   DISTRIBUTION", above) and that the command 'gmake' exists.

2) In the local working directory, simply type 'mk or mkd'.  The standard 
   Makefile will build any local code and link the local program which 
   will be placed in the ../bin directory and will carry the same name 
   as the directory in which it was created.  Output F90 modules will
   appear in an automatically created directory ../modules.  By default,
   both 'production', ie non-debug, and debug executables will be
   created.


*****************************************************************************
A QUICK INTRODUCTION TO THE MAKEFILE STRUCTURE
-----------------------------------------------

1) A generic user Makefile can be found in: 

   DIR/bmad_dist/twiss_track_test/Makefile. 

   This Makefile is intended for building all code in a local directory where 
   one of the files contains a main PROGRAM.  It will automatically link  
   an executable that uses the code in that area and code in the BMAD 
   distribution that has been installed.  Makefile itself just contains 
   basic "setup information" and includes another makefile, called M.tail,  
   that does all the "heavy lifting".  M.tail can be found in:

   DIR/bmad_dist/Gmake/M.tail.  


2) A detailed document describing all the build scripts and Makefiles is 
   underway.  It will be included in a future BMAD distribution.


*****************************************************************************
HANDLING DIFFERENT FORTRAN COMPILERS
------------------------------------

1) The  variable DIST_F90 specifies Fortran compiler which is used
   by the M.tail master makefile. 

   The value of  DIST_F90 depending on platform may be:
   value    --  compiler      --  platform:

   gfortran --  gfortran      --  default on Linux_i686    
   intel        Intel fortran --  Also supported on Linux_i686
   hp       --  f77/f90/f95   --  default on OSF1_alpha


   Please make sure your chosen compiler is installed and configured
   correctly for your user environment before attempting to build
   a BMAD distribution.  Many commercial compilers ship with scripts
   that must be run upon login, or immediately prior to using the 
   compiler to ensure proper operation.  Consult your compiler's
   documentation for details.


2) For using non-default compiler DIST_F90 must be set
   to appropriate value (see table above).


3) After changing compiler do not forget to recompile the entire bmad distribution. 
