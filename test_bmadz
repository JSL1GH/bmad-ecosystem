#!/bin/sh

###############################################################
# This is a script to validate the bmadz binary using
# various test cases.
###############################################################
# Usage:
#  test_bmadz REL=release_name PLAT=platform
#
# where release_name is of the form 
#  cesr_YYYY_MM_DD_d
# and platform is one of the following values
#  Linux_i686_intel  Linux_i686_lahey  OSF1_alpha  VMS_alpha_hp
###############################################################

HOST=""
cesrlibs_path=/home/cesrulib/cesr_libs

# kinit -k -t /etc/cesrulib-keytab cesrulib/lnx209.lns.cornell.edu

myprint_help () {
#   Print help info
    echo ""
    echo "Usage is:  test_bmadz [release_name] [platform]"
    echo ""
    echo "Inputs:"
    echo "   [release_name]      of the form cesr_YYYY_MMDD_d"
    echo "   [platform]          is one of the following"
    echo "                     Linux_i686_intel   Linux_i686_lahey"
    echo "                     OSF1_alpha_hp      CYGWIN_NT_i686_intel"
    echo ""
    exit 1
}

OSF1_set_secstamp () {                     # 'date' command is ultra weak on OSF1, ugh. Hack here
    temp=`date +%OH`                       # so elapsed seconds of test can be read back later.
    hours=`expr ${temp} \* 3600`         # seconds since the day began
     hours=`expr ${hours} + 86400`         # + 86400 for safety if job ever happens through midnight.
    temp=`date +%OM`                    
    minutes=`expr ${temp} \* 60`            # seconds since the hour began
    seconds=`date +%OS`
    secstamp=`expr \( ${hours} + ${minutes} \) + ${seconds}` # timestamp -- seconds since exactly one day ago
}

if ( [ $# = 0 ] || [ $# -gt 2 ] ) then
    myprint_help
    exit 1
fi

if ( [ ! -d "${cesrlibs_path}/${2}/${1}" ] ) then
    myprint_help
else
    release=${1}
    platform=${2}
fi

# Set the hostname for remote job execution
case $platform in
  Linux_i686_intel      ) HOST=lnx209.lns.cornell.edu; flag=LI;;
  Linux_i686_lahey      ) HOST=lnx209.lns.cornell.edu; flag=LL;;
  OSF1_alpha_hp         ) HOST=cesr68.lns.cornell.edu; flag=OH;;
  VMS_alpha_hp          ) HOST=cesr68.lns.cornell.edu; flag=VH;;
  CYGWIN_NT_i686_intel  ) HOST=pc6115.lns.cornell.edu; flag=CI;;
esac

testdir=${HOME}/tmp/bmadzT_${release}_${flag}
echo "HOST: ${HOST}"

echo ""
echo "<<<<<<<<<<<<<<<<<<<<<<<<<<<<  Post-build bmadz test for ${release} >>>>>>>>>>>>>>>>>>>>>>>>>>"
if ( [ ${platform} = "OSF1_alpha_hp" ] ) then  
    OSF1_set_secstamp
    echo "`date`  (${secstamp})  BEGIN bmadz test."
else
    echo "`date`  (`date +%s`)  BEGIN bmadz test."
fi

echo "Creating test directory ${testdir}..."
mkdir ${testdir}
echo "Copying necessary files to test directory..."
cp /home/cesrulib/cesr_libs/${platform}/${release}/bin/bmadz ${testdir}

for file in `ls ${cesrlibs_path}/${platform}/${release}/cvssrc/bmadz/test_jobs`
do
   if ( [ ! -d ${file} ] ) then
     cp ${cesrlibs_path}/${platform}/${release}/cvssrc/bmadz/test_jobs/${file} $testdir
   fi
done

echo ""
echo "==="

cd ${testdir}
./bmadz cons_nonlin.in bmad_4170_2ma_20051220.lat
status=${?}
echo "==="
echo "BMADZ TEST COMPLETED WITH STATUS: "${status}
echo "Cleaning up..."

rm -rf ${testdir}

if ( [ ${platform} = "OSF1_alpha_hp" ] ) then
    OSF1_set_secstamp
    echo "`date`  (${secstamp})  END bmadz test."
else
    echo "`date`  (`date +%s`)  END bmadz test."
fi
echo "<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"
echo ""

