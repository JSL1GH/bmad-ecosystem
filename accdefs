#---- cesrdefs ----
#
# Define cesr specific environment variables;
# to be used by sh-like shells: sh,ksh,bash.
# (Csh, tcsh should use cesrdef) 
#
# Borrows heavily from the CLEO cleodefs script 
# M. Palmer
#
# Usage in .profile:
#   . /home/cesrulib/bin/cesrdefs
# or switch to other versions of libraries and constants:
#   CESRLIB=current; CONST=/tem/constants; . /home/cesrulib/bin/cesrdefs
# or define aliases in .profile, e.g.:
#   alias cesrdefs ". /home/cesrulib/bin/cesrdefs"
#   alias devel="CESRLIB=devel; . /home/cesrulib/bin/cesrdefs"
#   alias current="CESRLIB=current; . /home/cesrulib/bin/cesrdefs"
#
#
#======================================================
# Get platform/OS tags
#======================================================
PLATFORM_TAG="`uname -s | cut -d- -f1`_`uname -m`"


if ( [ "$CESRLIB" == "" ] ) then
  CESRLIB=$ACCLIB
fi
if ( [ "$ACCLIB" == "" ] ) then
  ACCLIB=$CESRLIB
fi


if ( [ "$CESRF90" == "" ] ) then
  CESRF90=$ACCF90
fi
if ( [ "$ACCF90" == "" ] ) then
  ACCF90=$CESRF90
fi

#======================================================
# Set CESR fortran compiler:
# CESRF90 = intel (or lahey, hp, absoft, ibm, gnu)
# intel   -- ifort        default on  Linux_i686 
# lahey   -- lf95         supported on Linux_i686
# hp      -- f77/f90/f95  default on OSF1_alpha
# ibm     -- xlf
# absoft  -- f95          default on Darwin_powerpc
# gnu     -- g77/g95
#======================================================
if ( [ "${PLATFORM_TAG}" = "CYGWIN_NT_i686" ] ) then 
  CESRF90=${CESRF90:-intel}
  ACCF90=${ACCF90:-intel}
fi
if ( [ "${PLATFORM_TAG}" = "Linux_i686" ] ) then 
  CESRF90=${CESRF90:-intel}
  ACCF90=${ACCF90:-intel}
fi
if ( [ "${PLATFORM_TAG}" = "OSF1_alpha" ] ) then
  CESRF90=${CESRF90:-hp}
  ACCF90=${ACCF90:-hp}
fi
if ( [ "${PLATFORM_TAG}" = "Darwin_powerpc" ] ) then 
  CESRF90=${CESRF90:-absoft}
  ACCF90=${ACCF90:-absoft}
fi

#=======================================================
# Only here for temporary fix of stalled login scripts
# for users sourcing this script on x86_64 architecture  
# machines.  This provides no other functionality.
#=======================================================
if ( [ "${PLATFORM_TAG}" = "Linux_x86_64" ] ) then
  CESRF90=${CESRF90:-intel}  
  ACCF90=${ACCF90:-intel}
fi


#=======================================================
# Set Accelerator Code Libraries base areas:
# Presently have Unix/Linux and Cygwin versions
#=======================================================
BASE_DIR_DEF=/nfs/acc
#=======================================================
#
#=======================================================


if ( [ "${PLATFORM_TAG}" = "CYGWIN_NT_i686" ] ) then 
     BASE_DIR_DEF=/cygdrive/c/user_local/cesrulib
#=======================================================
# set physical disk for CESR library area (here w:)
# and  disk  for your local  working area (here c:) 
#=======================================================
     export CESR_PD=w
     export LOCAL_PD=c
fi

###CESRLIB_BASE=${CESRLIB_BASE:-${BASE_DIR_DEF}}

CESRLIB_BASE=${BASE_DIR_DEF}
ACCLIB_BASE=${BASE_DIR_DEF}

###CESRLIB_BIN=${CESRLIB_BIN:-${CESRLIB_BASE}/bin}
CESRLIB_BIN=${CESRLIB_BIN:-/home/cesrulib/bin}
ACCLIB_BIN=${ACCLIB_BIN:-/home/cesrulib/bin}


#==============================
#       Switchable version
#==============================
CESRLIB=${CESRLIB:-current}
ACCLIB=${ACCLIB:-current}
CERN_LEVEL=${CERN_LEVEL:-pro}

#==============================
#       Root names
#==============================
###CONST=${CONST:-${CESRLIB_BASE}/constants}


CESR_=${CESR_:-${CESRLIB_BASE}/libs}
ACC_=${ACC_:-${ACCLIB_BASE}/libs}

CERN=${CERN:-/nfs/cern}

#======================================================
# Export the CESR environment variable structure
#======================================================
CESRENV=${CESRENV:-${CESRLIB_BIN}/accenv}
#
if [ -f $CESRENV ]
then
  eval `grep '^setenv' $CESRENV | while read cmd nam val ; 
    do echo "$nam=$val ; export $nam ;"; done`
else
  echo "File $CESRENV not found."
fi



ACCENV=${ACCENV:-${ACCLIB_BIN}/accenv-converted}
#
if [ -f $ACCENV ]
then
  eval `grep '^setenv' $ACCENV | while read cmd nam val ; 
    do echo "$nam=$val ; export $nam ;"; done`
else
  echo "File $ACCENV not found."
fi


#=============================================================================
# ----  Add cesrulib bin area to user's PATH ----
# ----  Add standard applications area to user's PATH if not there already ---
#=============================================================================
PATH_LIST=`echo $PATH | sed s/:/\ /g`
found=0
for dir in ${PATH_LIST}; do
  if ( [ "${dir}" = "${CESRLIB_BIN}" ] ) then 
    found=1
  fi
done
if ( [ ${found} -eq 0 ] ) then
  PATH=${PATH}:${CESRLIB_BIN}
  export PATH
fi

found=0
for dir in ${PATH_LIST}; do
  if ( [ "${dir}" = "${ACC_EXE}" ] ) then 
    found=1
  fi
done
if ( [ ${found} -eq 0 ] ) then
  PATH=${PATH}:${ACC_EXE}
  export PATH
fi


#==========================================================
# Now unset all override variables that, by default, use a 
# derivative path from $CESRLIB_BASE.  This does NOT need 
# to be done for the "version" variables.  Also unset the 
# CESRENV variable.
#==========================================================
unset CESRLIB_BIN
unset CESR_
unset CESRENV
unset CESRF90
unset CESRLIB

unset ACCLIB_BIN
unset ACC_
unset ACCENV
unset ACCF90
unset ACCLIB

#==========================================================
# Log users who are setting up the CESR accelerator code 
# libraries environment.  This is so that notifications of
# changes can be sent to all active users. 
#==========================================================
lock_count=0
lock_file=/home/cesrulib/user_log/users.lock
users_done=0
users_file=/home/cesrulib/user_log/users.list
max_count=2
while ( [ ${users_done} -eq 0 -a ${lock_count} -lt ${max_count} ] ) do
    if ( [ -f ${lock_file} ] ) then
      #echo "Waiting for ACL setup lock!"
      sleep 1
      lock_count=`expr ${lock_count} + 1`
    else
      touch ${lock_file}
      echo "`whoami`" >> ${users_file}
      users_done=1
      rm ${lock_file}
    fi
done
unset lock_count
unset lock_file
unset users_done
unset users_file
unset max_count

#=======================================================
# Verify whether CESR environment setup succeeded
#=======================================================
#if ( [ -e ${CESR_REL} ] ) then
#  echo "CESR setup complete for ${CESR_REL}"
#fi
#if ( [ ! -e ${CESR_REL} ] ) then
#  echo "${CESR_REL} does NOT EXIST!!!"
#  echo ""
#  echo "**************  WARNING!!!!  **************"
#  echo "*                                         *"
#  echo "* CESR environment variable setup failed! *"  
#  echo "*  Please check your inputs to cesrdefs!  *"
#  echo "*                                         *"
#  echo "*******************************************"
#fi

if ( [ -z "${CESR_REL}" ] && [ -z "${CESR_F90}" ] ) then
  echo "The critical variables CESR_REL and/or CESR_F90$"
  echo "            have not been set!"
  echo ""
  echo "**************  WARNING!!!!  **************"
  echo "*                                         *"
  echo "* CESR environment variable setup failed! *"  
  echo "*  Please check your inputs to cesrdefs!  *"
  echo "*                                         *"
  echo "*******************************************"
fi

# Logic here to use the new <release>/src path instead of cvssrc
# if the old-build current release is chosen, otherwise use the new path
# current release as of 24-May-2007 negates this mechanism as the
# most recent builds for current and devel are both of the /src style.
#if ( [ "${CESR_REL}" = "${CESR_BASE}/current" ] ) then
#  CESR_SRC="${CESR_REL}/cvssrc"
#  export CESR_SRC
#else

CESR_SRC="${CESR_REL}/src"
export CESR_SRC

#fi

CESR_INC="${CESR_SRC}/include"
export CESR_INC

#==============================================================
# Centralized set up of Intel and Lahey compilers (Linux only)
#==============================================================
if ( [ "${PLATFORM_TAG}" = "Linux_i686" ] ) then 
    . /nfs/opt/ifc/bin/ifortvars.sh
    . /nfs/opt/lf9562/bash_setup
fi


###########################################################################
###########################################################################
#
# $Id$
#
# $Log: cesrdefs,v $
# Revision 1.13  2006/09/15 21:33:17  cesrulib
# Error-checking and documentation adjustments
#
# Revision 1.12  2006/09/14 20:50:38  cesrulib
# Fixed setup-failed check, commented out hook
# to old-style env. vars.
#
# Revision 1.11  2006/09/11 20:47:01  cesrulib
# Updates for new library build tree (supporting multiple compiler combinations).
#
# Revision 1.10  2006/08/13 22:31:42  cesrulib
# Update with user logging.
#
# Revision 1.9  2006/03/13 18:53:26  cesrulib
# merging with win_port
#
# Revision 1.8.2.2  2006/02/15 20:42:03  cesrulib
# windows porting BMAD environment added
#
# Revision 1.8.2.1  2006/02/10 21:11:43  cesrulib
# windows porting
#
# Revision 1.8  2005/06/02 18:32:52  cesrulib
# Intel ifort is default on Linux now...
#
# Revision 1.7  2005/05/15 01:31:36  cesrulib
# New environment variables and some changes have been introduced in order
# make switches between FORTRAN compilers more easy.
# These variables are:
# CESR_F90 for standard release and
# BMAD_F90   for bmad distribution.
# The value of CESR_F90 (or BMAD_F90) depending on platform may be:
#  value   --  compiler    --  platform:
#
#  intel   --  ifort       --  (test in progress on Linux_i686)
#  lahey   --  lf95        --  default on Linux_i686
#  hp      --  f77/f90/f95 --  default on OSF1_alpha
#  ibm     --  xlf
#  absoft  --  f95         --  default on Darwin_powerpc (test in progress)
#  gnu     --  g77/g95
#
# List of files with the change:
# util/
# cesrdefs cesrdef cesrenv do_release f90_mod_list.perl cesrmakedepend
# bmad_defs bmad_def bmadenv do_bmad_dist
# Gmake/
# M.tail M.release M.distribution
#
# Revision 1.6  2004/11/16 16:01:37  palmer
# Update environment variable structure including support for Windows and
# new naming conventions.
#
# Revision 1.5  2003/09/08 15:17:58  cesrulib
# Updates for automatic platform dependence and synchronized release/packages
# areas.
#
# Revision 1.4  2003/05/27 15:21:45  palmer
# Add CERN variable definitions.
#
# Revision 1.3  2003/05/21 12:33:17  palmer
# Add PKG_INC environment variable.
# Fix miscellaneous comments.
# Automatically append /home/cesrulib/bin to user's PATH environment variable.
#
# Revision 1.2  2001/10/04 20:35:21  palmer
# Add environment variables for paths to the external packages area.
#
# Revision 1.1  2001/09/29 18:18:15  palmer
# Environment variable utilities for CESR libraries on Unix.
#
#
